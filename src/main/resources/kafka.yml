t1:
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:8097}
    security.protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
    max-poll-interval-ms: ${KAFKA_MAX_POLL_INTERVAL_MS:3000}
    max-partition-fetch-bytes: 300000
    session-timeout-ms: 60000
    consumer:
      group-id: ${KAFKA_GROUP_ID:t1-demo}
      auto-offset-reset: earliest
      max-poll-records: ${KAFKA_MAX_POLL_RECORDS:10}
      enable-auto-commit: false
      properties:
        spring.json.use.type.headers: false
    producer:
      enable: ${KAFKA_PRODUCER_ENABLE:true}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: ${KAFKA_PRODUCER_RETRIES:5}
      properties:
        spring.json.add.type.headers: ${KAFKA_TYPE_ID_HEADERS:false}
    topic:
      t1_demo_transaction_accept: ${KAFKA_TRANSACTIONS_TOPIC:t1_demo_transaction_accept}
      t1_demo_metrics: ${KAFKA_METRICS_TOPIC:t1_demo_metrics}
    listener:
      concurrency: ${KAFKA_CONCURRENCY:3}
      poll-timeout: 1000